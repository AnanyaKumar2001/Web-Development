
DESKTOP-35UAKFA+svpnpa@DESKTOP-35UAKFA MINGW64 ~
$ mongo
MongoDB shell version v4.0.28
connecting to: mongodb://127.0.0.1:27017/?gssapiServiceName=mongodb
Implicit session: session { "id" : UUID("fda8d75c-ab6d-48d4-ac72-6ef9d597b9c7") }
MongoDB server version: 4.0.28
Welcome to the MongoDB shell.
For interactive help, type "help".
For more comprehensive documentation, see
        http://docs.mongodb.org/
Questions? Try the support group
        http://groups.google.com/group/mongodb-user
Server has startup warnings: 
2023-03-20T22:12:55.586+0530 I CONTROL  [initandlisten] 
2023-03-20T22:12:55.586+0530 I CONTROL  [initandlisten] ** WARNING: Access control is not enabled for the database.
2023-03-20T22:12:55.586+0530 I CONTROL  [initandlisten] **          Read and write access to data and configuration is unrestricted.
2023-03-20T22:12:55.587+0530 I CONTROL  [initandlisten] 
---
Enable MongoDB's free cloud-based monitoring service, which will then receive and display
metrics about your deployment (disk utilization, CPU, operation statistics, etc).

The monitoring data will be available on a MongoDB website with a unique URL accessible to you
and anyone you share the URL with. MongoDB may use this information to make product
improvements and to suggest MongoDB products and deployment options to you.

To enable free monitoring, run the following command: db.enableFreeMonitoring()
To permanently disable this reminder, run the following command: db.disableFreeMonitoring()
---

> show dbs
admin   0.000GB
config  0.000GB
local   0.000GB
> use shopDB
switched to db shopDB
> show dbs     
admin   0.000GB
config  0.000GB
local   0.000GB
> db  
shopDB
> db.products.insertOne( { _id:1, name: "Pen", price: 1.20} )
{ "acknowledged" : true, "insertedId" : 1 }
> show collections
products
> db.products.insertOne( { _id:2, name: "Pencil", price: 0.80} )
{ "acknowledged" : true, "insertedId" : 2 }
> show collections
products
> db.products.find()
{ "_id" : 1, "name" : "Pen", "price" : 1.2 }
{ "_id" : 2, "name" : "Pencil", "price" : 0.8 }
> db.products.find({name: "Pencil"})
{ "_id" : 2, "name" : "Pencil", "price" : 0.8 }
> db.products.find({price: {$gt: 1}})
{ "_id" : 1, "name" : "Pen", "price" : 1.2 }
> db.products.find({_id: 1}, {name: 1})
{ "_id" : 1, "name" : "Pen" }
> db.products.find({_id: 1}, {name: 1, _id: 0})
{ "name" : "Pen" }
> db.products.updateOne({_id:1}, {$set: {stock: 32}})
{ "acknowledged" : true, "matchedCount" : 1, "modifiedCount" : 1 }
> db.products.find()                                 
{ "_id" : 1, "name" : "Pen", "price" : 1.2, "stock" : 32 }
{ "_id" : 2, "name" : "Pencil", "price" : 0.8 }
> db.products.updateOne({_id:2}, {$set: {stock: 12}})
{ "acknowledged" : true, "matchedCount" : 1, "modifiedCount" : 1 }
> db.products.find()
{ "_id" : 1, "name" : "Pen", "price" : 1.2, "stock" : 32 }
{ "_id" : 2, "name" : "Pencil", "price" : 0.8, "stock" : 12 }
> db.products.deleteOne({_id: 2})                    
{ "acknowledged" : true, "deletedCount" : 1 }
> db.products.find()
{ "_id" : 1, "name" : "Pen", "price" : 1.2, "stock" : 32 }
>